# Optimized for performance with BuildKit
version: '3.8'

# Named volumes for caching
volumes:
  node_modules_frontend:
  node_modules_customer:
  node_modules_report:
  pip_cache:

# Enable BuildKit for parallel builds and better caching
x-env: &default-environment
  # Common environment variables
  NODE_ENV: production
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1
  PYTHONPATH: "/app"
  # MQTT settings
  MQTT_BROKER_HOST: "mosquitto"
  MQTT_BROKER_PORT: 1883
  MQTT_BASE_TOPIC: "motospect/v1"
  # Port configurations
  FRONTEND_PORT: 3030
  BACKEND_PORT: 8030
  CUSTOMER_PORTAL_PORT: 3040
  REPORT_SERVICE_PORT: 3050
  MQTT_PORT: 1884
  MQTT_WS_PORT: 9002

# Common build arguments
x-build-args: &default-build-args
  BUILDKIT_INLINE_CACHE: 1
  NODE_ENV: production


services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        <<: *default-build-args
    container_name: motospect-backend
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      PORT: 8030
      NODE_ENV: production
    ports:
      - "8030:8030"
    volumes:
      - ./backend:/app
      - pip_cache:/root/.cache/pip
    networks:
      - motospect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        <<: *default-build-args
        NODE_ENV: production
    container_name: motospect-frontend
    environment:
      <<: *default-environment
      PORT: ${FRONTEND_PORT}
      REACT_APP_MQTT_URL: ws://mosquitto:${MQTT_WS_PORT}
      REACT_APP_MQTT_BASE_TOPIC: ${MQTT_BASE_TOPIC}
      REACT_APP_MQTT_USERNAME: ${MQTT_USER:-motospect}
      REACT_APP_MQTT_PASSWORD: ${MQTT_PASSWORD:-motospect123}
      REACT_APP_BACKEND_URL: http://backend:${BACKEND_PORT}
      REACT_APP_BACKEND_WS_URL: ws://backend:${BACKEND_PORT}/ws
      REACT_APP_USE_MQTT: "true"
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - motospect-network
    restart: unless-stopped
    depends_on:
      - mosquitto
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  customer-portal:
    build: ./customer-portal
    container_name: motospect-customer-portal
    ports:
      - "${CUSTOMER_PORTAL_PORT}:${CUSTOMER_PORTAL_PORT}"
    environment:
      - PORT=${CUSTOMER_PORTAL_PORT}
      - REACT_APP_BACKEND_URL=http://localhost:${BACKEND_PORT}
      - REACT_APP_REPORT_URL=http://localhost:${REPORT_SERVICE_PORT}
      - REACT_APP_MQTT_URL=ws://localhost:${MQTT_WS_PORT}
      - REACT_APP_MQTT_BASE_TOPIC=${MQTT_BASE_TOPIC}
      - REACT_APP_MQTT_USERNAME=${MQTT_USER:-motospect}
      - REACT_APP_MQTT_PASSWORD=${MQTT_PASSWORD:-motospect123}
      - CHOKIDAR_USEPOLLING=true
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./customer-portal:/app
      - /app/node_modules
    networks:
      - motospect-network
    depends_on:
      - mosquitto
      - backend

  report-service:
    build: ./report-service
    container_name: motospect-report-service
    ports:
      - "${REPORT_SERVICE_PORT}:${REPORT_SERVICE_PORT}"
    environment:
      - PORT=${REPORT_SERVICE_PORT}
      - REACT_APP_BACKEND_URL=http://host.docker.internal:${BACKEND_PORT}
    volumes:
      - ./report-service:/app
      - /app/node_modules
    networks:
      - motospect-network
    command: npm start

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: motospect-mosquitto
    ports:
      - "${MQTT_PORT}:1883"         # MQTT TCP
      - "${MQTT_WS_PORT}:9001"      # MQTT over WebSocket
    environment:
      - MOSQUITTO_USERNAME=${MQTT_USER:-motospect}
      - MOSQUITTO_PASSWORD=${MQTT_PASSWORD:-motospect123}
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    command: /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-p", "1883", "-t", "$SYS/broker/uptime", "-m", "test", "-u", "${MQTT_USER:-motospect}", "-P", "${MQTT_PASSWORD:-motospect123}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - motospect-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 128M

  firmware:
    build:
      context: ./firmware
      dockerfile: Dockerfile
    container_name: motospect-firmware
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
      - MQTT_BASE_TOPIC=${MQTT_BASE_TOPIC}
      - MQTT_USERNAME=${MQTT_USER:-motospect}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-motospect123}
    depends_on:
      mosquitto:
        condition: service_healthy
    networks:
      - motospect-network
    restart: unless-stopped

networks:
  motospect-network:
    driver: bridge

volumes:
  mosquitto_data:
    name: motospect_mosquitto_data
  mosquitto_log:
    name: motospect_mosquitto_log
  backend-deps:
    name: motospect_backend_deps
  frontend-deps:
    name: motospect_frontend_deps
